{"mappings":"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","sources":["<anon>","assets/bundle.min.js"],"sourcesContent":["var $ce95a5548dfd9100$exports = {};\n(()=>{\n    var g = (t, e)=>()=>(t && (e = t(t = 0)), e);\n    var W = (t, e)=>()=>(e || t((e = {\n                exports: {}\n            }).exports, e), e.exports);\n    var b, M = g(()=>{\n        b = class t {\n            static #e = new Map([\n                [\n                    [\n                        [\n                            \"0\"\n                        ],\n                        [\n                            \"p\"\n                        ]\n                    ],\n                    \"0\"\n                ],\n                [\n                    [\n                        [\n                            \"1\"\n                        ],\n                        [\n                            \"q\"\n                        ]\n                    ],\n                    \"1\"\n                ],\n                [\n                    [\n                        [\n                            \"2\"\n                        ],\n                        [\n                            \"w\"\n                        ]\n                    ],\n                    \"2\"\n                ],\n                [\n                    [\n                        [\n                            \"3\"\n                        ],\n                        [\n                            \"e\"\n                        ]\n                    ],\n                    \"3\"\n                ],\n                [\n                    [\n                        [\n                            \"4\"\n                        ],\n                        [\n                            \"r\"\n                        ]\n                    ],\n                    \"4\"\n                ],\n                [\n                    [\n                        [\n                            \"5\"\n                        ],\n                        [\n                            \"t\"\n                        ]\n                    ],\n                    \"5\"\n                ],\n                [\n                    [\n                        [\n                            \"6\"\n                        ],\n                        [\n                            \"y\"\n                        ]\n                    ],\n                    \"6\"\n                ],\n                [\n                    [\n                        [\n                            \"7\"\n                        ],\n                        [\n                            \"u\"\n                        ]\n                    ],\n                    \"7\"\n                ],\n                [\n                    [\n                        [\n                            \"8\"\n                        ],\n                        [\n                            \"i\"\n                        ]\n                    ],\n                    \"8\"\n                ],\n                [\n                    [\n                        [\n                            \"9\"\n                        ],\n                        [\n                            \"o\"\n                        ]\n                    ],\n                    \"9\"\n                ],\n                [\n                    [\n                        [\n                            \".\"\n                        ],\n                        [\n                            \",\"\n                        ]\n                    ],\n                    \".\"\n                ],\n                [\n                    [\n                        [\n                            \"-\"\n                        ],\n                        [\n                            \"m\",\n                            \"shift\"\n                        ]\n                    ],\n                    \"-\"\n                ],\n                [\n                    [\n                        [\n                            \"\\u221A\"\n                        ],\n                        [\n                            \"s\",\n                            \"shift\"\n                        ]\n                    ],\n                    \"\\u221A\"\n                ],\n                [\n                    [\n                        [\n                            \"/\"\n                        ],\n                        [\n                            \"/\",\n                            \"shift\"\n                        ],\n                        [\n                            \"d\",\n                            \"shift\"\n                        ]\n                    ],\n                    \"/\"\n                ],\n                [\n                    [\n                        [\n                            \"+\"\n                        ],\n                        [\n                            \"+\",\n                            \"shift\"\n                        ],\n                        [\n                            \"p\",\n                            \"shift\"\n                        ]\n                    ],\n                    \"+\"\n                ],\n                [\n                    [\n                        [\n                            \"*\"\n                        ],\n                        [\n                            \"*\",\n                            \"shift\"\n                        ],\n                        [\n                            \"t\",\n                            \"shift\"\n                        ]\n                    ],\n                    \"*\"\n                ],\n                [\n                    [\n                        [\n                            \"=\"\n                        ],\n                        [\n                            \"e\",\n                            \"shift\"\n                        ],\n                        [\n                            \"enter\"\n                        ]\n                    ],\n                    \"=\"\n                ],\n                [\n                    [\n                        [\n                            \"backspace\"\n                        ],\n                        [\n                            \"x\"\n                        ]\n                    ],\n                    \"delete\"\n                ],\n                [\n                    [\n                        [\n                            \"escape\"\n                        ],\n                        [\n                            \"c\",\n                            \"control\"\n                        ]\n                    ],\n                    \"clear\"\n                ]\n            ]);\n            static keyProcessor(e, n = !1, s = !1) {\n                for (let [r, i] of t.#e)for (let a of r)if (a.includes(e.toLowerCase()) && e !== \"Shift\" && e !== \"Control\" && n === a.includes(\"shift\") && s === a.includes(\"control\")) return i;\n            }\n            static getKeyMap() {\n                return t.#e;\n            }\n        };\n    });\n    var d, T = g(()=>{\n        d = class t {\n            #e;\n            #t;\n            #r = {};\n            #s = {};\n            static #n;\n            static #o;\n            constructor(e, n){\n                n !== t.#o && t.#a(\"newDXCalcCalled\");\n                let s = t.#h(e);\n                this.#v(s);\n            }\n            get digits() {\n                return this.#t;\n            }\n            get isNegative() {\n                return this.#e;\n            }\n            get integer() {\n                return this.#r;\n            }\n            get sciNum() {\n                return t.#m(this.value);\n            }\n            get decimal() {\n                return this.#s;\n            }\n            get value() {\n                return t.#c(this.#t.toString(), this.#s?.length);\n            }\n            add(e) {\n                e instanceof t || (e = t.number(e));\n                let n = Math.max(this.#s?.length ?? 0, e.#s?.length ?? 0), s = this.#i(n), r = e.#i(n), i = s + r;\n                return t.number(t.#c(i, n));\n            }\n            subtract(e) {\n                return e instanceof t || (e = t.number(e)), e.#t *= -1n, e.#e ^= !0, this.add(e);\n            }\n            multiply(e) {\n                e instanceof t || (e = t.number(e));\n                let n = (this.#s?.length ?? 0) + (e.#s?.length ?? 0), s = this.#t * e.#t;\n                return t.number(t.#c(s, n));\n            }\n            divide(e) {\n                e instanceof t || (e = t.number(e));\n                let n = Math.max(this.#s?.length ?? 0, e.#s?.length ?? 0), s = this.#i(n), r = e.#i(n);\n                if (r === 0n) return t.#a(\"divideZero\");\n                let i = (m, y, f = 0)=>{\n                    if (f <= t.#n && m % y !== 0n) {\n                        let O = m * 10n;\n                        return f++, i(O, y, f);\n                    } else return [\n                        m,\n                        f\n                    ];\n                };\n                t.#n++;\n                let [a, u] = i(s, r);\n                t.#n--;\n                let c = (a / r).toString(), l = t.#c(c, u);\n                return t.number(l);\n            }\n            sqrt() {\n                this.#e && t.#a(\"negativeForbidden\", this.value);\n                let e = t.#b(this);\n                return t.number(e.value.slice(0, t.#n + 1 + e.#r.length));\n            }\n            static get scale() {\n                return t.#n;\n            }\n            static number(e) {\n                if (e instanceof t) return e;\n                let n = t.#u(e);\n                return new t(n, t.#o);\n            }\n            static{\n                t.#n = 9, t.#o = Symbol(\"unique identifier\"), t.from = t.number, t.prototype.times = t.prototype.multiply, t.prototype.plus = t.prototype.add, t.prototype.minus = t.prototype.subtract, t.prototype.div = t.prototype.divide;\n            }\n            static setScale = (e)=>(typeof e == \"number\" ? (t.#u(e, \"scale\"), e > 0 ? t.#n = e : t.#a(\"numNeedMoreThanZero\")) : t.#a(\"unsupportedType\", e), t);\n            static longScale() {\n                return t.setScale(20), t;\n            }\n            #i(e) {\n                let n = e - (this?.#s?.length || 0);\n                return n < 0 ? this.#t / 10n ** -BigInt(n) : this.#t * 10n ** BigInt(n);\n            }\n            static #u(e, n = \"default\") {\n                switch(typeof e){\n                    case \"string\":\n                        break;\n                    case \"number\":\n                        n !== \"scale\" && t.#d(\"inputNumber\"), e = e.toString();\n                        break;\n                    case \"bigint\":\n                        e = e.toString();\n                        break;\n                    default:\n                        return t.#a(\"unsupportedType\", e);\n                }\n                if (e = e.trim(), !(n === \"scale\" ? /^[+-]?(\\d+)$/ : /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?$/).test(e)) return t.#a(\"badNum\", e);\n                switch(n){\n                    case \"default\":\n                        return e;\n                    case \"scale\":\n                        return +e;\n                    default:\n                        t.#a(\"unsupportedValidateMode\");\n                }\n            }\n            static #a(e = \"default\", n) {\n                switch(e){\n                    case \"numNeedMoreThanZero\":\n                        throw new Error(`\nThe number \\${info} is invalid!\nMust be more than zero`);\n                    case \"newDXCalcCalled\":\n                        throw new Error(`\nDXCalc constructor cannot be called directly.\nUse DXCalc.number() instead.`);\n                    case \"unsupportedValidateMode\":\n                        throw new Error(`\nUnsupported validate mode <${n}>!\nPlease refer to the documentation.`);\n                    case \"unsupportedType\":\n                        throw new Error(`\nUnsupported type <${typeof n}>!\nPlease refer to the documentation.`);\n                    case \"badNum\":\n                        throw n === \"\" && (n = \"empty string\"), new Error(`\nIncorrect number: <${n}> is not a valid number!`);\n                    case \"badScale\":\n                        throw new Error(`\nCannot have less than 0 decimals: <${n}>!`);\n                    case \"divideZero\":\n                        throw new Error(`\nCannot divide by zero!`);\n                    case \"negSqrt\":\n                        throw new Error(`\nSquare root of a negative number is imaginary!`);\n                    case \"negativeForbidden\":\n                        throw new Error(`\nNumber <${n}> not in range: only positive numbers allowed!`);\n                    case \"default\":\n                        throw new Error(`\nFatal error, that's all we know...`);\n                }\n            }\n            static #d(e = \"default\", n) {\n                switch(e){\n                    case \"inputNumber\":\n                        console.warn(\"Don't use number type: Prefer string or bigint input for higher precision and avoiding bugs\");\n                        break;\n                    default:\n                        console.warn(\"This is a warning, that's all we know...\");\n                }\n            }\n            static #h = (e)=>{\n                let n = e.toString(), s = n.includes(\"e\") || n.includes(\"E\") ? t.#p(n) : n, r = t.#g(s);\n                return t.#l(r);\n            };\n            static #c(e, n) {\n                let s = e.toString(), r = s[0] === \"-\" ? \"-\" : \"\", i = s.slice(r.length), a = i.length, c = (()=>{\n                    let l = r + i;\n                    return n === 0 || n === void 0 ? l : n < 0 ? r + i + \"0\".repeat(-n) : a > n ? r + i.slice(0, a - n) + \".\" + i.slice(a - n) : r + \"0.\" + \"0\".repeat(n - a) + i;\n                })();\n                return t.#l(c);\n            }\n            static #l = (e)=>{\n                let n = e.indexOf(\".\"), s = e[0] === \"-\" ? \"-\" : \"\";\n                e = e.replace(\"-\", \"\").replace(/^0+/g, \"\"), e.includes(\".\") && (e = e.replace(/0+$/g, \"\"), e.at(-1) === \".\" && (e = e.slice(0, -1)), e.at(0) === \".\" && (e = \"0\" + e));\n                let [r, i] = e.split(\".\");\n                return r === \"\" && i !== void 0 && (e = \"0.\" + i), e === \"\" ? \"0\" : s + e;\n            };\n            static #p = (e)=>{\n                let [n, s = \"0\"] = e.split(\"e\"), [r, i] = n.split(\".\"), a = s[0] === \"-\", u = +(a ? s.slice(1) : s);\n                return a ? t.#c(r + (i ?? \"\"), u + (i?.length ?? 0)) : t.#c(r + (i ?? \"\"), (i?.length ?? 0) - u);\n            };\n            static #m(e) {\n                let n = t.#u(e), s = t.#l(e), i = n.includes(\"e\") || n.includes(\"E\") ? t.#p(s) : s, [a, u = \"\"] = i.split(\".\"), c = a[0] === \"-\" ? \"-\" : \"\", l = t.#l((a + u).slice(c.length)), m = (()=>{\n                    let k = l.length > 1, x = l[0] + \".\" + l.slice(1);\n                    return k ? c + x : c + a;\n                })(), y = i.includes(\".\") ? \".\" : \"\", [f, O] = m.split(\".\"), q = (()=>{\n                    let k = l.length + c.length === i.length - y.length, x = a.length - f.length, K = l.length - i.length + y.length + c.length;\n                    return k ? x : K;\n                })(), j = q === 0 ? \"\" : \"e\" + q;\n                return m + j;\n            }\n            static #f(e) {\n                let n = t.#u(e), s = n[0] === \"-\" ? \"-\" : \"\", r = BigInt(n.replace(/^-|\\./g, \"\")), i = n.split(\".\")[1]?.length ?? 0;\n                return r % 10n >= 5n && (r += 10n), r -= r % 10n, r /= 10n, t.#c(s + r.toString(), Math.min(t.#n, i));\n            }\n            static #g(e) {\n                let n = t.#u(e), [s, r] = n.split(\".\"), i = n[0] === \"-\" ? \"-\" : \"\";\n                return r === void 0 || r.length <= t.#n ? n : (r = r.slice(0, t.#n + 1), t.#f(s + \".\" + r));\n            }\n            static #b(e) {\n                if (e.#t === 0n) return e;\n                t.#n++;\n                let n = 100, s = (i)=>i.add(e.divide(i)).divide(\"2\"), r = t.number(\"1\");\n                for(let i = 0; i < n; i++){\n                    let a = s(r), u = r.subtract(a), c = u.#t === 0n, l = u.#s?.startsWith(\"0\".repeat(this.#n - 1)) ?? !1;\n                    if (c || l) break;\n                    r = s(r);\n                }\n                return t.#n--, r = t.number(r.value), r;\n            }\n            #v(e) {\n                this.#e = e[0] === \"-\", this.#t = BigInt(e.replace(/\\./g, \"\")), [this.#r, this.#s] = e.split(\".\"), this.#e && (this.#r = this.#r.slice(1));\n            }\n        };\n    });\n    var w, A = g(()=>{\n        T();\n        w = class t {\n            #e = [\n                \"\"\n            ];\n            #t = [];\n            get publicNumberStack() {\n                return [\n                    ...this.#e\n                ];\n            }\n            get publicOperatorStack() {\n                return [\n                    ...this.#t\n                ];\n            }\n            static #r = {\n                \"+\": (e, n)=>d.number(e).add(n).value,\n                \"-\": (e, n)=>d.number(e).subtract(n).value,\n                \"*\": (e, n)=>d.number(e).multiply(n).value,\n                \"/\": (e, n)=>d.number(e).divide(n).value\n            };\n            static #s = {\n                \"\\u221A\": (e)=>d.number(e).sqrt().value,\n                negate: (e)=>d.number(e).multiply(\"-1\")\n            };\n            static #n(e) {\n                return t.#s.hasOwnProperty(e);\n            }\n            static #o(e) {\n                return t.#r.hasOwnProperty(e);\n            }\n            resetAll() {\n                this.#e = [\n                    \"\"\n                ], this.#t = [];\n            }\n            deleteCharacter() {\n                this.currentNumber !== \"\" ? this.#e.push(this.#e.pop().slice(0, -1)) : this.currentOperator !== void 0 && (this.#t.pop(), this.previousNumber !== void 0 && this.#e.pop());\n            }\n            get currentOperator() {\n                return this.#t.at(-1);\n            }\n            get currentNumber() {\n                return this.#e.at(-1);\n            }\n            get previousNumber() {\n                return this.#e.at(-2);\n            }\n            get #i() {\n                return this.#t.at(-2);\n            }\n            conditionalAddDecimalSign() {\n                this.currentNumber.includes(\".\") || this.#e.push(this.#e.pop().concat(\".\"));\n            }\n            addNumber(e) {\n                let s = this.#e.pop() + e;\n                this.#e.push(s);\n            }\n            addOperator(e) {\n                let n = !1;\n                switch(this.#u(e)){\n                    case !0:\n                        this.#t.push(e);\n                        break;\n                    case !1:\n                        break;\n                    case \"negate\":\n                        this.currentNumber !== \"-\" && (this.#e.pop(), this.#e.push(\"-\"));\n                        break;\n                    case \"sameGroup\":\n                        n = !0, this.#t.pop(), this.#t.push(e);\n                        break;\n                }\n                if (t.#n(this.currentOperator) && this.currentNumber !== \"\") {\n                    let s = this.#t.pop();\n                    this.#t.push(\"*\"), this.#t.push(s), this.#a(), s = null;\n                }\n                this.#i !== void 0 && this.#l(), !t.#n(this.currentOperator) && !n && this.#e[0] !== \"-\" && this.#a();\n            }\n            calculate() {\n                this.#t.push(\"non-existant operator\"), this.#l(), this.#t.pop();\n            }\n            #u(e) {\n                let n = t.#n(this.currentOperator) && t.#n(e) || t.#o(this.currentOperator) && t.#o(e);\n                return e === \"-\" && this.#e.length === 1 && this.#e[0] === \"\" || this.#e[0] === \"-\" ? \"negate\" : this.currentNumber === \"\" ? n ? \"sameGroup\" : !1 : !0;\n            }\n            #a() {\n                this.#e.push(\"\");\n            }\n            #d(e) {\n                this.#e.push(e), this.#t.splice(-2, 1);\n            }\n            #h(e) {\n                let n = this.#e.pop(), s = t.#s[e], r = s(n);\n                this.#d(r);\n            }\n            #c(e) {\n                let n = this.#e.splice(-2, 2), s = t.#r[e], r = s(...n);\n                this.#d(r);\n            }\n            #l() {\n                t.#n(this.#i) ? this.#h(this.#i) : !t.#n(this.currentOperator) && t.#o(this.#i) && this.#c(this.#i), this.#t.length > 1 && !t.#n(this.currentOperator) && this.#l();\n            }\n        };\n    });\n    var h, S = g(()=>{\n        h = class {\n            #e;\n            constructor(e){\n                this.#e = e;\n            }\n            node(e) {\n                return this.#e.querySelector(e);\n            }\n            nodes(e) {\n                return this.#e.querySelectorAll(e);\n            }\n            nodesArray() {\n                return Array.from(this.#e.querySelectorAll(selector));\n            }\n            event(e, n) {\n                return this.#e.addEventListener(e, n);\n            }\n        };\n    });\n    var N, L = g(()=>{\n        S();\n        N = class {\n            #e;\n            #t;\n            #r;\n            #s;\n            #n;\n            #o;\n            constructor(e, n, s, r, i){\n                this.#e = e, this.#t = n, this.#r = s, this.#n = r.cloneNode(!0), this.#o = i, this.#s = new h(this.#r), r.remove();\n            }\n            addAlternateNumber(e = \"\") {\n                let n = this.#n.cloneNode(!0);\n                n.textContent = e.toString(), this.#r.appendChild;\n            }\n            removeAlternateNumber(e = null) {\n                let n = this.#s.nodesArray(\"*\"), s = n.filter((r)=>r.textContent === e.toString());\n                e === null || s === [] ? n[0]?.remove() : s.remove();\n            }\n            resetAlternateNumbers() {\n                this.#s.nodes(\"*\").remove();\n            }\n            #i() {}\n            updateNumber(e) {\n                e === \"\" || (this.#e.textContent = e);\n            }\n            updateOperator(e) {\n                this.#t.textContent = e === \"/\" ? \"\\xF7\" : e;\n            }\n        };\n    });\n    var E, I = g(()=>{\n        E = class {\n            #e;\n            #t;\n            #r;\n            constructor(e, n, s){\n                this.#e = e, this.#t = n, this.#r = s;\n            }\n            #s(e, n, s) {\n                return Math.max(n, Math.min(e, s));\n            }\n            #n() {\n                let e = this.#e.clientWidth / this.#t.clientWidth, n = this.#t.style.fontSize?.split(\"px\")[0] || this.#r, s = this.#s(n * e, +this.#r / 3, +this.#r);\n                this.#t.style.fontSize = s + \"px\";\n            }\n            start() {\n                new ResizeObserver(()=>{\n                    this.#n();\n                }).observe(this.#t);\n            }\n        };\n    });\n    var le = W(()=>{\n        M();\n        A();\n        L();\n        S();\n        I();\n        var H = ()=>{\n            let t = document.createElement(\"div\");\n            return t.classList.add(\"alternate-number\"), t;\n        }, U = new h(document), p = new h(U.node(\"#calculator\")), z = p.node(\"#number-display\"), Q = p.node(\"#operator-display\"), J = p.node(\"#alternate-numbers\"), D = new h(z).node(\"p\"), Y = window.getComputedStyle(D).fontSize.split(\"px\")[0], o = new w, v = new N(D, Q, J, H(), b.getKeyMap()), _ = p.nodes('[id^=\"num-\"].number'), ee = p.nodes('[id^=\"oper-\"].operator'), te = p.node(\"#decimal-sign\"), ne = p.node(\"#equal-sign\"), se = p.node(\"#delete-digit\"), re = p.node(\"#clear-entry\");\n        new E(z, D, Y).start();\n        var P = {\n            \"num-1\": \"1\",\n            \"num-2\": \"2\",\n            \"num-3\": \"3\",\n            \"num-4\": \"4\",\n            \"num-5\": \"5\",\n            \"num-6\": \"6\",\n            \"num-7\": \"7\",\n            \"num-8\": \"8\",\n            \"num-9\": \"9\",\n            \"num-0\": \"0\"\n        }, R = {\n            \"equal-sign\": \"=\",\n            \"oper-plus\": \"+\",\n            \"oper-minus\": \"-\",\n            \"oper-multiply\": \"*\",\n            \"oper-divide\": \"/\",\n            \"oper-sqrt\": \"\\u221A\"\n        }, ie = Object.values(P), ae = Object.values(R), C = ()=>{\n            v.updateNumber(o.currentNumber ?? \"\"), v.updateOperator(o.currentOperator ?? \"\");\n        }, V = (t)=>{\n            o.addNumber(t), v.updateNumber(o.currentNumber);\n        }, $ = (t)=>{\n            o.addOperator(t), v.updateNumber(o.previousNumber), v.updateOperator(o.currentOperator);\n        }, F = ()=>{\n            o.conditionalAddDecimalSign(), v.updateNumber(o.currentNumber);\n        }, B = ()=>{\n            o.calculate(), C();\n        }, G = ()=>{\n            o.deleteCharacter(), C();\n        }, X = ()=>{\n            o.resetAll(), C();\n        };\n        _.forEach((t)=>{\n            t.addEventListener(\"click\", ()=>{\n                V(P[t.id]);\n            });\n        });\n        ee.forEach((t)=>{\n            t.addEventListener(\"click\", ()=>{\n                $(R[t.id]);\n            });\n        });\n        te.addEventListener(\"click\", ()=>{\n            F();\n        });\n        ne.addEventListener(\"click\", ()=>{\n            B();\n        });\n        se.addEventListener(\"click\", ()=>{\n            G();\n        });\n        re.addEventListener(\"click\", ()=>{\n            X();\n        });\n        var oe = (t)=>{\n            switch(t){\n                case \"=\":\n                    B();\n                    break;\n                case \".\":\n                    F();\n                    break;\n                case \"delete\":\n                    G();\n                    break;\n                case \"clear\":\n                    X();\n                    break;\n                default:\n                    throw new Error(`The ${t} is not a handled case!`);\n            }\n        }, ce = (t)=>{\n            ie.includes(t) ? V(t) : ae.includes(t) ? $(t) : oe(t);\n        };\n        U.event(\"keydown\", (t)=>{\n            let e = b.keyProcessor(t.key, t.shiftKey, t.ctrlKey);\n            e !== void 0 && ce(e);\n        });\n    });\n    le();\n})();\n\n\n//# sourceMappingURL=calculator.d064c3f3.js.map\n","(()=>{var g=(t,e)=>()=>(t&&(e=t(t=0)),e);var W=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var b,M=g(()=>{b=class t{static#e=new Map([[[[\"0\"],[\"p\"]],\"0\"],[[[\"1\"],[\"q\"]],\"1\"],[[[\"2\"],[\"w\"]],\"2\"],[[[\"3\"],[\"e\"]],\"3\"],[[[\"4\"],[\"r\"]],\"4\"],[[[\"5\"],[\"t\"]],\"5\"],[[[\"6\"],[\"y\"]],\"6\"],[[[\"7\"],[\"u\"]],\"7\"],[[[\"8\"],[\"i\"]],\"8\"],[[[\"9\"],[\"o\"]],\"9\"],[[[\".\"],[\",\"]],\".\"],[[[\"-\"],[\"m\",\"shift\"]],\"-\"],[[[\"\\u221A\"],[\"s\",\"shift\"]],\"\\u221A\"],[[[\"/\"],[\"/\",\"shift\"],[\"d\",\"shift\"]],\"/\"],[[[\"+\"],[\"+\",\"shift\"],[\"p\",\"shift\"]],\"+\"],[[[\"*\"],[\"*\",\"shift\"],[\"t\",\"shift\"]],\"*\"],[[[\"=\"],[\"e\",\"shift\"],[\"enter\"]],\"=\"],[[[\"backspace\"],[\"x\"]],\"delete\"],[[[\"escape\"],[\"c\",\"control\"]],\"clear\"]]);static keyProcessor(e,n=!1,s=!1){for(let[r,i]of t.#e)for(let a of r)if(a.includes(e.toLowerCase())&&e!==\"Shift\"&&e!==\"Control\"&&n===a.includes(\"shift\")&&s===a.includes(\"control\"))return i}static getKeyMap(){return t.#e}}});var d,T=g(()=>{d=class t{#e;#t;#r={};#s={};static#n;static#o;constructor(e,n=void 0){n!==t.#o&&t.#a(\"newDXCalcCalled\");let s=t.#h(e);this.#v(s)}get digits(){return this.#t}get isNegative(){return this.#e}get integer(){return this.#r}get sciNum(){return t.#m(this.value)}get decimal(){return this.#s}get value(){return t.#c(this.#t.toString(),this.#s?.length)}add(e){e instanceof t||(e=t.number(e));let n=Math.max(this.#s?.length??0,e.#s?.length??0),s=this.#i(n),r=e.#i(n),i=s+r;return t.number(t.#c(i,n))}subtract(e){return e instanceof t||(e=t.number(e)),e.#t*=-1n,e.#e^=!0,this.add(e)}multiply(e){e instanceof t||(e=t.number(e));let n=(this.#s?.length??0)+(e.#s?.length??0),s=this.#t*e.#t;return t.number(t.#c(s,n))}divide(e){e instanceof t||(e=t.number(e));let n=Math.max(this.#s?.length??0,e.#s?.length??0),s=this.#i(n),r=e.#i(n);if(r===0n)return t.#a(\"divideZero\");let i=(m,y,f=0)=>{if(f<=t.#n&&m%y!==0n){let O=m*10n;return f++,i(O,y,f)}else return[m,f]};t.#n++;let[a,u]=i(s,r);t.#n--;let c=(a/r).toString(),l=t.#c(c,u);return t.number(l)}sqrt(){this.#e&&t.#a(\"negativeForbidden\",this.value);let e=t.#b(this);return t.number(e.value.slice(0,t.#n+1+e.#r.length))}static get scale(){return t.#n}static number(e){if(e instanceof t)return e;let n=t.#u(e);return new t(n,t.#o)}static{t.#n=9,t.#o=Symbol(\"unique identifier\"),t.from=t.number,t.prototype.times=t.prototype.multiply,t.prototype.plus=t.prototype.add,t.prototype.minus=t.prototype.subtract,t.prototype.div=t.prototype.divide}static setScale=e=>(typeof e==\"number\"?(t.#u(e,\"scale\"),e>0?t.#n=e:t.#a(\"numNeedMoreThanZero\")):t.#a(\"unsupportedType\",e),t);static longScale(){return t.setScale(20),t}#i(e){let n=e-(this?.#s?.length||0);return n<0?this.#t/10n**-BigInt(n):this.#t*10n**BigInt(n)}static#u(e,n=\"default\"){switch(typeof e){case\"string\":break;case\"number\":n!==\"scale\"&&t.#d(\"inputNumber\"),e=e.toString();break;case\"bigint\":e=e.toString();break;default:return t.#a(\"unsupportedType\",e)}if(e=e.trim(),!(n===\"scale\"?/^[+-]?(\\d+)$/:/^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?$/).test(e))return t.#a(\"badNum\",e);switch(n){case\"default\":return e;case\"scale\":return+e;default:t.#a(\"unsupportedValidateMode\")}}static#a(e=\"default\",n=void 0){switch(e){case\"numNeedMoreThanZero\":throw new Error(`\nThe number \\${info} is invalid!\nMust be more than zero`);case\"newDXCalcCalled\":throw new Error(`\nDXCalc constructor cannot be called directly.\nUse DXCalc.number() instead.`);case\"unsupportedValidateMode\":throw new Error(`\nUnsupported validate mode <${n}>!\nPlease refer to the documentation.`);case\"unsupportedType\":throw new Error(`\nUnsupported type <${typeof n}>!\nPlease refer to the documentation.`);case\"badNum\":throw n===\"\"&&(n=\"empty string\"),new Error(`\nIncorrect number: <${n}> is not a valid number!`);case\"badScale\":throw new Error(`\nCannot have less than 0 decimals: <${n}>!`);case\"divideZero\":throw new Error(`\nCannot divide by zero!`);case\"negSqrt\":throw new Error(`\nSquare root of a negative number is imaginary!`);case\"negativeForbidden\":throw new Error(`\nNumber <${n}> not in range: only positive numbers allowed!`);case\"default\":throw new Error(`\nFatal error, that's all we know...`)}}static#d(e=\"default\",n=void 0){switch(e){case\"inputNumber\":console.warn(\"Don't use number type: Prefer string or bigint input for higher precision and avoiding bugs\");break;default:console.warn(\"This is a warning, that's all we know...\")}}static#h=e=>{let n=e.toString(),s=n.includes(\"e\")||n.includes(\"E\")?t.#p(n):n,r=t.#g(s);return t.#l(r)};static#c(e,n){let s=e.toString(),r=s[0]===\"-\"?\"-\":\"\",i=s.slice(r.length),a=i.length,c=(()=>{let l=r+i;return n===0||n===void 0?l:n<0?r+i+\"0\".repeat(-n):a>n?r+i.slice(0,a-n)+\".\"+i.slice(a-n):r+\"0.\"+\"0\".repeat(n-a)+i})();return t.#l(c)}static#l=e=>{let n=e.indexOf(\".\"),s=e[0]===\"-\"?\"-\":\"\";e=e.replace(\"-\",\"\").replace(/^0+/g,\"\"),e.includes(\".\")&&(e=e.replace(/0+$/g,\"\"),e.at(-1)===\".\"&&(e=e.slice(0,-1)),e.at(0)===\".\"&&(e=\"0\"+e));let[r,i]=e.split(\".\");return r===\"\"&&i!==void 0&&(e=\"0.\"+i),e===\"\"?\"0\":s+e};static#p=e=>{let[n,s=\"0\"]=e.split(\"e\"),[r,i]=n.split(\".\"),a=s[0]===\"-\",u=+(a?s.slice(1):s);return a?t.#c(r+(i??\"\"),u+(i?.length??0)):t.#c(r+(i??\"\"),(i?.length??0)-u)};static#m(e){let n=t.#u(e),s=t.#l(e),i=n.includes(\"e\")||n.includes(\"E\")?t.#p(s):s,[a,u=\"\"]=i.split(\".\"),c=a[0]===\"-\"?\"-\":\"\",l=t.#l((a+u).slice(c.length)),m=(()=>{let k=l.length>1,x=l[0]+\".\"+l.slice(1);return k?c+x:c+a})(),y=i.includes(\".\")?\".\":\"\",[f,O]=m.split(\".\"),q=(()=>{let k=l.length+c.length===i.length-y.length,x=a.length-f.length,K=l.length-i.length+y.length+c.length;return k?x:K})(),j=q===0?\"\":\"e\"+q;return m+j}static#f(e){let n=t.#u(e),s=n[0]===\"-\"?\"-\":\"\",r=BigInt(n.replace(/^-|\\./g,\"\")),i=n.split(\".\")[1]?.length??0;return r%10n>=5n&&(r+=10n),r-=r%10n,r/=10n,t.#c(s+r.toString(),Math.min(t.#n,i))}static#g(e){let n=t.#u(e),[s,r]=n.split(\".\"),i=n[0]===\"-\"?\"-\":\"\";return r===void 0||r.length<=t.#n?n:(r=r.slice(0,t.#n+1),t.#f(s+\".\"+r))}static#b(e){if(e.#t===0n)return e;t.#n++;let n=100,s=i=>i.add(e.divide(i)).divide(\"2\"),r=t.number(\"1\");for(let i=0;i<n;i++){let a=s(r),u=r.subtract(a),c=u.#t===0n,l=u.#s?.startsWith(\"0\".repeat(this.#n-1))??!1;if(c||l)break;r=s(r)}return t.#n--,r=t.number(r.value),r}#v(e){this.#e=e[0]===\"-\",this.#t=BigInt(e.replace(/\\./g,\"\")),[this.#r,this.#s]=e.split(\".\"),this.#e&&(this.#r=this.#r.slice(1))}}});var w,A=g(()=>{T();w=class t{#e=[\"\"];#t=[];get publicNumberStack(){return[...this.#e]}get publicOperatorStack(){return[...this.#t]}static#r={\"+\":(e,n)=>d.number(e).add(n).value,\"-\":(e,n)=>d.number(e).subtract(n).value,\"*\":(e,n)=>d.number(e).multiply(n).value,\"/\":(e,n)=>d.number(e).divide(n).value};static#s={\"\\u221A\":e=>d.number(e).sqrt().value,negate:e=>d.number(e).multiply(\"-1\")};static#n(e){return t.#s.hasOwnProperty(e)}static#o(e){return t.#r.hasOwnProperty(e)}resetAll(){this.#e=[\"\"],this.#t=[]}deleteCharacter(){this.currentNumber!==\"\"?this.#e.push(this.#e.pop().slice(0,-1)):this.currentOperator!==void 0&&(this.#t.pop(),this.previousNumber!==void 0&&this.#e.pop())}get currentOperator(){return this.#t.at(-1)}get currentNumber(){return this.#e.at(-1)}get previousNumber(){return this.#e.at(-2)}get#i(){return this.#t.at(-2)}conditionalAddDecimalSign(){this.currentNumber.includes(\".\")||this.#e.push(this.#e.pop().concat(\".\"))}addNumber(e){let s=this.#e.pop()+e;this.#e.push(s)}addOperator(e){let n=!1;switch(this.#u(e)){case!0:this.#t.push(e);break;case!1:break;case\"negate\":this.currentNumber!==\"-\"&&(this.#e.pop(),this.#e.push(\"-\"));break;case\"sameGroup\":n=!0,this.#t.pop(),this.#t.push(e);break}if(t.#n(this.currentOperator)&&this.currentNumber!==\"\"){let s=this.#t.pop();this.#t.push(\"*\"),this.#t.push(s),this.#a(),s=null}this.#i!==void 0&&this.#l(),!t.#n(this.currentOperator)&&!n&&this.#e[0]!==\"-\"&&this.#a()}calculate(){this.#t.push(\"non-existant operator\"),this.#l(),this.#t.pop()}#u(e){let n=t.#n(this.currentOperator)&&t.#n(e)||t.#o(this.currentOperator)&&t.#o(e);return e===\"-\"&&this.#e.length===1&&this.#e[0]===\"\"||this.#e[0]===\"-\"?\"negate\":this.currentNumber===\"\"?n?\"sameGroup\":!1:!0}#a(){this.#e.push(\"\")}#d(e){this.#e.push(e),this.#t.splice(-2,1)}#h(e){let n=this.#e.pop(),s=t.#s[e],r=s(n);this.#d(r)}#c(e){let n=this.#e.splice(-2,2),s=t.#r[e],r=s(...n);this.#d(r)}#l(){t.#n(this.#i)?this.#h(this.#i):!t.#n(this.currentOperator)&&t.#o(this.#i)&&this.#c(this.#i),this.#t.length>1&&!t.#n(this.currentOperator)&&this.#l()}}});var h,S=g(()=>{h=class{#e;constructor(e){this.#e=e}node(e){return this.#e.querySelector(e)}nodes(e){return this.#e.querySelectorAll(e)}nodesArray(){return Array.from(this.#e.querySelectorAll(selector))}event(e,n){return this.#e.addEventListener(e,n)}}});var N,L=g(()=>{S();N=class{#e;#t;#r;#s;#n;#o;constructor(e,n,s,r,i){this.#e=e,this.#t=n,this.#r=s,this.#n=r.cloneNode(!0),this.#o=i,this.#s=new h(this.#r),r.remove()}addAlternateNumber(e=\"\"){let n=this.#n.cloneNode(!0);n.textContent=e.toString(),this.#r.appendChild}removeAlternateNumber(e=null){let n=this.#s.nodesArray(\"*\"),s=n.filter(r=>r.textContent===e.toString());e===null||s===[]?n[0]?.remove():s.remove()}resetAlternateNumbers(){this.#s.nodes(\"*\").remove()}#i(){}updateNumber(e){e===\"\"||(this.#e.textContent=e)}updateOperator(e){this.#t.textContent=e===\"/\"?\"\\xF7\":e}}});var E,I=g(()=>{E=class{#e;#t;#r;constructor(e,n,s){this.#e=e,this.#t=n,this.#r=s}#s(e,n,s){return Math.max(n,Math.min(e,s))}#n(){let e=this.#e.clientWidth/this.#t.clientWidth,n=this.#t.style.fontSize?.split(\"px\")[0]||this.#r,s=this.#s(n*e,+this.#r/3,+this.#r);this.#t.style.fontSize=s+\"px\"}start(){new ResizeObserver(()=>{this.#n()}).observe(this.#t)}}});var le=W(()=>{M();A();L();S();I();var H=()=>{let t=document.createElement(\"div\");return t.classList.add(\"alternate-number\"),t},U=new h(document),p=new h(U.node(\"#calculator\")),z=p.node(\"#number-display\"),Q=p.node(\"#operator-display\"),J=p.node(\"#alternate-numbers\"),D=new h(z).node(\"p\"),Y=window.getComputedStyle(D).fontSize.split(\"px\")[0],o=new w,v=new N(D,Q,J,H(),b.getKeyMap()),_=p.nodes('[id^=\"num-\"].number'),ee=p.nodes('[id^=\"oper-\"].operator'),te=p.node(\"#decimal-sign\"),ne=p.node(\"#equal-sign\"),se=p.node(\"#delete-digit\"),re=p.node(\"#clear-entry\");new E(z,D,Y).start();var P={\"num-1\":\"1\",\"num-2\":\"2\",\"num-3\":\"3\",\"num-4\":\"4\",\"num-5\":\"5\",\"num-6\":\"6\",\"num-7\":\"7\",\"num-8\":\"8\",\"num-9\":\"9\",\"num-0\":\"0\"},R={\"equal-sign\":\"=\",\"oper-plus\":\"+\",\"oper-minus\":\"-\",\"oper-multiply\":\"*\",\"oper-divide\":\"/\",\"oper-sqrt\":\"\\u221A\"},ie=Object.values(P),ae=Object.values(R),C=()=>{v.updateNumber(o.currentNumber??\"\"),v.updateOperator(o.currentOperator??\"\")},V=t=>{o.addNumber(t),v.updateNumber(o.currentNumber)},$=t=>{o.addOperator(t),v.updateNumber(o.previousNumber),v.updateOperator(o.currentOperator)},F=()=>{o.conditionalAddDecimalSign(),v.updateNumber(o.currentNumber)},B=()=>{o.calculate(),C()},G=()=>{o.deleteCharacter(),C()},X=()=>{o.resetAll(),C()};_.forEach(t=>{t.addEventListener(\"click\",()=>{V(P[t.id])})});ee.forEach(t=>{t.addEventListener(\"click\",()=>{$(R[t.id])})});te.addEventListener(\"click\",()=>{F()});ne.addEventListener(\"click\",()=>{B()});se.addEventListener(\"click\",()=>{G()});re.addEventListener(\"click\",()=>{X()});var oe=t=>{switch(t){case\"=\":B();break;case\".\":F();break;case\"delete\":G();break;case\"clear\":X();break;default:throw new Error(`The ${t} is not a handled case!`)}},ce=t=>{ie.includes(t)?V(t):ae.includes(t)?$(t):oe(t)};U.event(\"keydown\",t=>{let e=b.keyProcessor(t.key,t.shiftKey,t.ctrlKey);e!==void 0&&ce(e)})});le();})();\n"],"names":["g","b","M","d","T","w","A","h","S","N","L","E","I","t","e","Map","keyProcessor","n","s","r","i","a","includes","toLowerCase","getKeyMap","digits","isNegative","integer","sciNum","value","decimal","toString","length","add","number","Math","max","subtract","multiply","divide","m","y","f","u","c","l","sqrt","slice","scale","Symbol","from","prototype","times","plus","minus","div","setScale","longScale","BigInt","trim","test","Error","console","warn","repeat","indexOf","replace","at","split","k","x","K","O","q","min","startsWith","publicNumberStack","publicOperatorStack","negate","hasOwnProperty","resetAll","deleteCharacter","currentNumber","push","pop","currentOperator","previousNumber","conditionalAddDecimalSign","concat","addNumber","addOperator","calculate","splice","node","querySelector","nodes","querySelectorAll","nodesArray","Array","selector","event","addEventListener","cloneNode","remove","addAlternateNumber","textContent","appendChild","removeAlternateNumber","filter","resetAlternateNumbers","updateNumber","updateOperator","clientWidth","style","fontSize","start","ResizeObserver","observe","le","U","document","p","z","Q","J","D","Y","window","getComputedStyle","o","v","createElement","classList","_","ee","te","ne","se","re","P","R","ie","Object","values","ae","C","V","$","F","B","G","X","forEach","id","key","shiftKey","ctrlKey","oe","exports"],"version":3,"file":"calculator.d064c3f3.js.map"}